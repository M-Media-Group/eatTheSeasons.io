@import url("https://fonts.googleapis.com/css?family=Rubik:700&display=swap");

$baseNumber: 8;
$borderRadius: ($baseNumber * 2) + px;
$bg: #fff;
$text: #1f1f1f;
$light-green: #afe2b4;
$green: #22862d;
$dark-green: darken($green, 10%);
$green-border: $dark-green;
$green-shadow: #9ecba3;
$transiton-timing: 150ms cubic-bezier(0, 0, 0.58, 1), background 150ms cubic-bezier(0, 0, 0.58, 1);
$mobileBreakpoint: $baseNumber * 96 + px;
$allowDarkMode: false;
// Declare the vars above as CSS variables
:root {
    --bg: #{$bg};
    --text: #{$text};
    --green-shadow: #{$green-shadow};
}

// If allowDarkMode is true, then the dark mode will be used
// Otherwise, the light model will be used
@if $allowDarkMode == true {
    @media (prefers-color-scheme: dark) {
        :root {
            --bg: #{$text};
            --text: #{$bg};
            --green-shadow: #{darken($green-shadow, 40%)};
        }
    }
}

html {
    background: var(--bg);
    color: var(--text);
}

#app {
    font-family: Avenir, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
    width: 100%;
}

.logo-text {
    font-family: Herculanum;
    margin: 0;
}

.grid {
    display: grid;
    grid-auto-flow: row;
    gap: $baseNumber * 2 + px;
    width: 100%;
    margin: 0 auto;
    * {
        margin-top: 0;
        margin-bottom: 0;
    }

    > h1 {
        margin-bottom: revert;
    }

    &.small-gap {
        gap: $baseNumber + px;
    }

    &.big-gap {
        grid-gap: $baseNumber * 8 + px;
    }
    @media (min-width: $mobileBreakpoint) {
        &.big-gap {
            grid-gap: $baseNumber * 8 + px;
        }
    }
}

nav {
    padding: $baseNumber * 2 + px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;

    a {
        font-weight: bold;
        color: var(--text);

        &.router-link-exact-active {
            color: $green;
        }
    }
}

h2 {
    // margin-bottom: 0;

    > span {
        font-weight: 400;
    }
}

h3 {
    // margin: $baseNumber * 5 + px 0 0;
}

ul {
    list-style-type: none;
    padding: 0;
    li {
        display: inline-block;
        margin: 0 10px;
    }
}

ol {
    li {
        text-align: left;
    }
}

a {
    color: $green;
    &:hover {
        color: $dark-green;
    }
}

p {
    // margin-top: 0;
    // margin-bottom: $baseNumber + px;
}

table {
    margin: 0 auto;
}

tr:nth-last-child(2) {
    font-weight: bold;
    margin-bottom: 3rem;

    td {
        border-top: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
    }
}

.dropdown-selector {
    display: inline-block;
    text-decoration: underline;
    position: relative;
    cursor: pointer;
    z-index: 1;

    > ul {
        position: absolute;
        background: var(--bg);
        border-radius: $borderRadius;
        padding: $baseNumber * 2 + px;
        box-shadow: 0px $baseNumber + px $baseNumber + px rgba(0, 0, 0, 0.1);
        list-style: none;
        top: $baseNumber * 5 + px;
        left: -50%;

        > li {
            width: 100%;
            &:hover {
                cursor: pointer;
                text-decoration: underline;
            }
        }
    }
}

.badge {
    padding: $baseNumber / 2 + px $baseNumber + px;
    border-radius: $borderRadius;
    background: rgb(70, 70, 70);
    color: white;
    margin: 0 auto;
    width: fit-content;
}

form {
    grid-auto-flow: column;
    gap: $baseNumber + px;
    // grid-template-columns: 3fr 1fr;
    margin: 0 auto;
    width: 100%;
    grid-auto-columns: 1fr auto;
}

.bar {
    background: black;
    width: $baseNumber * 40 + px;
    max-width: 100%;
    min-width: 50vw;
    margin: 0 auto;
    height: $baseNumber + px;
    border-radius: $borderRadius;
    display: flex;
    // margin-top: $baseNumber + px;
    margin-bottom: ($baseNumber * 5 - ($baseNumber / 2)) + px;
}

.bar > small {
    width: 25%;
    height: 100%;
    position: relative;
    padding-top: $baseNumber + px;
    box-sizing: border-box;
}

.bar > small::after {
    // content: attr(class);
    position: absolute;
    top: $baseNumber * 2 + px;
    text-align: center;
    left: 35%;
}

.protein {
    background: rgb(139, 137, 255);
}

.carb {
    background: $green;
}

.water {
    background: rgb(0, 179, 255);
}

.fat {
    background: brown;
}
label {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    gap: $baseNumber + px;
}

input {
    -webkit-font-smoothing: antialiased;
    color: var(--text);
    background: inherit;
    border: 2px dashed $green;
    cursor: pointer;
    display: inline-block;
    font-family: Avenir, Helvetica, Arial, sans-serif;
    font-size: $baseNumber * 3 + px;
    font-weight: 700;
    height: $baseNumber * 6 + px;
    position: relative;
    text-align: center;
    border-radius: $borderRadius;
    padding: $baseNumber * 4 + px 0;
    width: 100%;
}

* {
    box-sizing: border-box;
    &::before,
    &::after {
        box-sizing: border-box;
    }
}

button {
    position: relative;
    display: inline-block;
    cursor: pointer;
    outline: none;
    border: 0;
    vertical-align: middle;
    text-decoration: none;
    font-size: inherit;
    font-family: inherit;
    margin-top: -0.5rem;
    border-radius: $borderRadius;
    max-height: $baseNumber * 8 + px;
    padding: 0.7em 1em;
    margin: $baseNumber + px;
    background: var(--bg);
    color: var(--text);
    border: 1px solid $green;
    max-width: max-content;
    margin-left: auto;
    margin-right: auto;

    &:hover {
        transition: all $transiton-timing;
        background: $green;
        color: var(--bg);
    }

    &.submit-button {
        font-weight: 600;
        color: $text;
        text-transform: uppercase;

        background: $light-green;
        border: 2px solid $green-border;
        border-radius: $borderRadius;
        transform-style: preserve-3d;
        transition: transform $transiton-timing;
        margin-top: -($baseNumber/2) + px;

        &::before {
            position: absolute;
            content: "";
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: $dark-green;
            border-radius: inherit;
            box-shadow: 0 0 0 2px $green-border, 0 0.625em 0 0 var(--green-shadow);
            transform: translate3d(0, 0.75em, -1em);
            transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
        }

        &:hover {
            background: $green;
            transform: translate(0, 0.25em);

            &::before {
                box-shadow: 0 0 0 2px $green-border, 0 0.5em 0 0 var(--green-shadow);
                transform: translate3d(0, 0.5em, -1em);
            }
        }

        &:active {
            background: $green;
            transform: translate(0em, 0.75em);

            &::before {
                box-shadow: 0 0 0 2px $green-border, 0 0 var(--green-shadow);
                transform: translate3d(0, 0, -1em);
            }
        }
    }
}

// Only on larger than mobile, add display grid to form
@media (min-width: $mobileBreakpoint) {
    form {
        display: grid;
    }
}

.food-item {
    form {
        width: max-content;
        grid-auto-columns: auto;
    }
    margin-bottom: $baseNumber * 4 + px;
}

.main-banner {
    width: 100%;
    background: #d9ffdc;
    /* color: white; */
    padding-top: 4rem;
    padding-bottom: 3rem;
    div {
        max-width: 680px;
        margin: 0 auto;
    }
    input {
        background: white;
    }
    h1 {
        margin: 0;
    }
    form {
        grid-auto-columns: auto;
        button {
            margin-left: unset;
            margin-right: unset;
            max-width: 100%;
        }
    }
}

img {
    width: 100%;
    max-width: 100%;
    height: auto;
    height: 35vh;
    object-fit: contain;
}

// Removed the sticky here, realistically users will not be switching months and areas very often so there is no reason to stick this info to the top of the page
// h1 {
//   position: sticky;
//   top: 0px;
//   background: white;
//   padding-top: 8px;
// }
