@import url("https://fonts.googleapis.com/css?family=Rubik:700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Hepta+Slab:wght@700&display=swap");

@import "variables";
@import "modal";
@import "animations";

html {
    background: var(--bg);
    color: var(--text);
}

body {
    margin: 0;
}

html,
#app {
    font-family: Avenir, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
    width: 100%;
}

.default-margin {
    margin-left: $baseNumber * 2 + px;
    margin-right: $baseNumber * 2 + px;
}

.default-padding {
    padding-left: $baseNumber * 2 + px;
    padding-right: $baseNumber * 2 + px;
}

.logo-text {
    font-family: Herculanum;
    font-family: "Hepta Slab";
    font-style: normal;
    font-weight: 700;
    font-size: $baseNumber * 3 + px;
    line-height: $baseNumber * 4 + px;
    z-index: 2;
    a,
    a.router-link-exact-active {
        text-decoration: none;
        color: white;
    }
    /* identical to box height */

    text-align: center;
    margin: 0;
}

.grid {
    display: grid;
    grid-auto-flow: row;
    gap: $baseNumber * 2 + px;
    width: 100%;
    margin: 0 auto;
    min-width: 0;
    * {
        margin-top: 0;
        margin-bottom: 0;
    }

    > h1 {
        margin-bottom: revert;
    }

    &.small-gap {
        gap: $baseNumber + px;
    }

    &.big-gap {
        grid-gap: $baseNumber * 8 + px;
    }

    &.horizontal {
        grid-auto-flow: column;
        align-items: center;

        &.scrollable {
            overflow-x: scroll;
            overflow-y: hidden;
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            -ms-overflow-style: none;
            scrollbar-width: none;

            &::-webkit-scrollbar {
                display: none;
            }
        }
    }

    @media (min-width: $mobileBreakpoint) {
        &.big-gap {
            grid-gap: $baseNumber * 8 + px;
        }
        &.columns {
            grid-auto-flow: column;
        }
        &.search-results {
            // grid-template-columns: repeat(2, minmax(min-content, 320px));
            align-items: flex-start;
            justify-content: center;
        }
    }
}

nav {
    padding: $baseNumber * 2 + px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    z-index: 2;
    background: $green;
    z-index: 100;

    > div > a {
        color: white;
    }

    a {
        font-weight: bold;
        color: var(--text);
        &.router-link-exact-active {
            color: $green;
        }
    }

    .open {
        position: fixed;
        top: 40%;

        @media (min-width: $mobileBreakpoint) {
            top: 0;
        }

        right: 0;
        padding: $baseNumber * 2 + px;
        cursor: pointer;
        background: $green;

        //   blur background
        //   backdrop-filter: invert(80%) blur(20px) opacity(0.5);

        border-radius: $baseNumber + px 0 0 $baseNumber + px;
        z-index: 100;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);
    }
}

h2 {
    // margin-bottom: 0;

    > span {
        font-weight: 400;
    }
}

h3 {
    // margin: $baseNumber * 5 + px 0 0;
}

ul {
    list-style-type: none;
    padding: 0;
    li {
        display: inline-block;
        margin: 0 $baseNumber + px;
    }
}

ol {
    li {
        text-align: left;
    }
}

a {
    color: $green;
    &:hover {
        color: $dark-green;
    }
}

p {
    // margin-top: 0;
    // margin-bottom: $baseNumber + px;
}

table {
    margin: 0 auto;
    max-width: 100%;
}

tr:nth-last-child(2) {
    font-weight: bold;
    margin-bottom: 3rem;

    td {
        border-top: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
    }
}

.dropdown-selector {
    display: inline-block;
    text-decoration: underline;
    position: relative;
    cursor: pointer;

    > ul {
        position: absolute;
        background: var(--bg);
        color: var(--text);
        border-radius: $borderRadius;
        padding: $baseNumber * 2 + px;
        box-shadow: 0px $baseNumber + px $baseNumber + px rgba(0, 0, 0, 0.1);
        list-style: none;
        top: $baseNumber * 5 + px;
        left: -50%;
        z-index: 100;

        > li {
            width: 100%;
            &:hover {
                cursor: pointer;
                text-decoration: underline;
            }
        }
    }
}

.badge {
    border-radius: $baseNumber + px;

    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: $baseNumber + px;
    gap: $baseNumber + px;

    background: rgb(70, 70, 70);
    color: white;
    margin: 0 auto;
    width: fit-content;
}

form {
    grid-auto-flow: column;
    gap: $baseNumber + px;
    // grid-template-columns: 3fr 1fr;
    margin: 0 auto;
    width: 100%;
    grid-auto-columns: 1fr auto;
    max-width: 100%;
}

.bar {
    background: black;
    // width: $baseNumber * 40 + px;
    max-width: 100%;
    // min-width: 50vw;
    min-width: 250px;
    margin: 0 auto;
    height: $baseNumber + px;
    border-radius: $baseNumber + px;
    display: flex;
    // margin-top: $baseNumber + px;
    // margin-bottom: ($baseNumber * 5 - ($baseNumber / 2)) + px;
    > meter {
        width: 25%;
        height: 100%;
        position: relative;
        padding-top: $baseNumber + px;
        box-sizing: border-box;
        text-align: center;
        appearance: none;
    }
    > meter:hover::after {
        content: attr(value) "%\a"attr(class);
        overflow-x: hidden;
        white-space: pre-wrap;
        position: absolute;
        bottom: $baseNumber * 2 + px;
        text-align: center;
        left: calc(50% - #{$baseNumber * 4 + px});
        background-color: var(--bg);
        border-radius: $borderRadius;
        z-index: 100;
        padding: $baseNumber + px $baseNumber * 2 + px;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);
        border: 1px solid lightgray;
    }
    // First child
    > :first-child {
        border-radius: $baseNumber + px 0 0 $baseNumber + px;
    }
    > :last-child {
        border-radius: 0 $baseNumber + px $baseNumber + px 0;
    }
}
.protein {
    background: $purple;
}

.carb {
    background: $green;
}

.water {
    background: rgb(0, 179, 255);
}

.fat {
    background: brown;
}

label {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    gap: $baseNumber + px;
}

input,
textarea,
select {
    appearance: none;
    -webkit-font-smoothing: antialiased;
    color: var(--text);
    background: inherit;
    border: $baseNumber / 4 + px dashed $green;
    cursor: pointer;
    display: inline-grid;
    align-content: center;
    justify-content: center;
    grid-auto-flow: column;
    font-family: inherit;
    font-size: $baseNumber * 3 + px;
    font-weight: 700;
    position: relative;
    text-align: center;
    border-radius: $borderRadius;
    padding: $baseNumber * 2 + px;
    min-width: $baseNumber * 2 + px;
    &.small {
        font-size: $baseNumber * 2 + px;
        padding: $baseNumber + px $baseNumber * 2 + px;
        font-weight: 400;
    }
}

[type="checkbox"],
[type="radio"] {
    width: $baseNumber * 4 + px;
    &:checked {
        background: $green;
        border: $baseNumber / 4 + px dashed $green;
    }
}

* {
    box-sizing: border-box;
    &::before,
    &::after {
        box-sizing: border-box;
    }
}

button {
    position: relative;
    // display: inline-block;
    cursor: pointer;
    outline: none;
    border: 0;
    vertical-align: middle;
    justify-content: center;
    text-decoration: none;
    font-size: inherit;
    font-family: inherit;
    margin-top: -0.5rem;
    border-radius: $borderRadius;
    // padding: 0.7em 1em;
    margin: $baseNumber + px;
    background: var(--bg);
    color: var(--text);
    // border: 1px solid $green;
    max-width: max-content;
    margin-left: auto;
    margin-right: auto;

    /* Button */

    box-sizing: border-box;

    /* Auto layout */

    display: flex;
    flex-direction: row;
    align-items: center;
    padding: ($baseNumber + 4) + px $baseNumber * 2 + px;
    gap: $baseNumber + px;

    box-shadow: $boxShadow;
    border-radius: $borderRadius;

    /* bold/p */

    font-style: normal;
    font-weight: 800;
    font-size: $baseNumber * 2 + px;
    line-height: $baseNumber * 3 + px;

    &:hover {
        transition: all $transiton-timing;
        background: $green;
        color: var(--bg);
    }

    &[data-percent-complete]:active {
        position: relative;
        user-select: none;
        &::after {
            // Create an auto-flooding background
            content: attr(data-percent-complete) "\a Keep pressing to complete";
            overflow-x: hidden;
            white-space: pre-wrap;
            position: absolute;
            bottom: $baseNumber * 4 + px;
            text-align: center;
            left: 0;
            right: 0;
            width: min-content;
            background-color: var(--bg);
            color: var(--text);
            border-radius: $borderRadius;
            z-index: 100;
            padding: $baseNumber + px $baseNumber * 2 + px;
            box-shadow: $boxShadow;
            border: 1px solid lightgray;
        }
    }

    &.submit-button {
        font-weight: 600;
        color: $text;
        text-transform: uppercase;

        background: $light-green;
        border: $baseNumber / 4 + px solid $green-border;
        border-radius: $borderRadius;
        transform-style: preserve-3d;
        transition: transform $transiton-timing;
        margin-top: -($baseNumber/2) + px;

        &::before {
            position: absolute;
            content: "";
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: $dark-green;
            border-radius: inherit;
            box-shadow: 0 0 0 2px $green-border, 0 0.625em 0 0 var(--green-shadow);
            transform: translate3d(0, 0.75em, -1em);
            transition: transform $transiton-timing;
        }

        &:hover {
            background: $green;
            transform: translate(0, 0.25em);

            &::before {
                box-shadow: 0 0 0 2px $green-border, 0 0.5em 0 0 var(--green-shadow);
                transform: translate3d(0, 0.5em, -1em);
            }
        }

        &:active {
            background: $green;
            transform: translate(0em, 0.75em);

            &::before {
                box-shadow: 0 0 0 2px $green-border, 0 0 var(--green-shadow);
                transform: translate3d(0, 0, -1em);
            }
        }

        + hr {
            margin-top: 2rem;
            @media (min-width: $mobileBreakpoint) {
                margin-top: unset;
            }
        }
    }
}

.hidden-on-mobile {
    @media (max-width: $mobileBreakpoint) {
        display: none;
    }
}

// Only on larger than mobile, add display grid to form
@media (min-width: $mobileBreakpoint) {
    form {
        display: grid;
    }
}

.food-item {
    form {
        width: max-content;
        grid-auto-columns: auto;
    }
    transition: $transiton-timing;
    margin-bottom: $baseNumber * 4 + px;
}

.disliked {
    opacity: 0.5;
    img {
        filter: grayscale(100%);
    }
}

.main-banner {
    width: 100%;
    background: #d9ffdc;
    /* color: white; */
    padding-top: 4rem;
    padding-bottom: 3rem;
    div {
        max-width: 680px;
        margin: 0 auto;
    }
    input {
        background: white;
    }
    h1 {
        margin: 0;
    }
    form {
        grid-auto-columns: auto;
        button {
            margin-left: auto;
            margin-right: auto;
            max-width: 100%;
        }
    }
}

img {
    width: 100%;
    max-width: 100%;
    height: auto;
    height: 35vh;
    object-fit: contain;
}

// Removed the sticky here, realistically users will not be switching months and areas very often so there is no reason to stick this info to the top of the page
// h1 {
//   position: sticky;
//   top: 0px;
//   background: white;
//   padding-top: $baseNumber + px;
// }

.page-header,
main > header,
main.grid > header {
    /* Rectangle 9 */

    position: relative;
    margin-top: -$baseNumber * 10 + px;
    width: 100%;
    padding-top: $baseNumber * 15 + px;
    left: 0px;
    top: 0px;
    padding-left: $baseNumber * 2 + px;
    padding-right: $baseNumber * 2 + px;

    background: $green;
    border-radius: 0 0 $baseNumber + px $baseNumber + px;
    display: inline-grid;
    align-items: center;
    grid-auto-rows: min-content;
    align-content: end;
    color: white;
    padding-bottom: $baseNumber * 5 + px;
    margin-bottom: 0;
    a,
    input {
        color: white;
    }
    h1 {
        /* Find food */

        text-align: center;

        /* h1 */
        font-style: normal;
        font-weight: 400;
        font-size: 39.0625px;
        line-height: 53px;
        text-align: center;
    }
    &.default {
        color: var(--text);
        a,
        input {
            color: var(--text);
        }
        background: var(--bg);
    }

    + input {
        /* Input */

        box-sizing: border-box;

        /* Auto layout */
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: $baseNumber + px;

        position: sticky;
        width: auto;
        max-width: 90%;

        top: $baseNumber + px;

        z-index: 2;

        margin-left: auto;
        margin-right: auto;

        background: var(--bg);
        border: 1px solid lightgray;
        box-shadow: $boxShadow;
        border-radius: $baseNumber * 2 + px;
    }
}

.menu {
    position: fixed;
    right: 0;
    top: 40%;

    @media (min-width: $mobileBreakpoint) {
        top: 0;
    }

    z-index: 100;

    .router-link-active {
        color: $green;
    }

    > svg {
        cursor: pointer;
    }

    > ul {
        /* MenuBurger */

        /* Auto layout */

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-end;
        gap: $baseNumber * 2 + px;
        padding: $baseNumber * 2 + px;

        position: relative;
        max-width: 70vw;

        background: #ffffff;
        box-shadow: $boxShadow;
        border-radius: $baseNumber + px;
        border: 1px solid #e0e0e0;

        li {
            /* p */

            margin: 0;

            //   font-family: "Roboto";
            font-style: normal;
            font-weight: 400;
            font-size: $baseNumber * 2 + px;
            line-height: 19px;
            /* identical to box height */

            text-align: right;

            color: #2c3e50;

            /* Inside auto layout */

            flex: none;
            order: 1;
            flex-grow: 0;
            a {
                text-decoration: none;
                color: inherit;
            }
        }
    }
}

input[type="date"],
input[type="time"] {
    -webkit-appearance: none;
}

.alert {
    position: fixed;
    top: $baseNumber + px;
    left: $baseNumber + px;
    right: $baseNumber + px;
    padding: $borderRadius;
    border-radius: $borderRadius;
    box-shadow: $boxShadow;
    z-index: 100;
    backdrop-filter: invert(80%) blur(20px) opacity(0.5) blur(20px);
    background: $green;
    color: white;
}

/**
 * Loading ([aria-busy=true])
 */
[aria-busy="true"] {
    cursor: progress;
}

[aria-busy="true"]:not(input, select, textarea, html)::before {
    display: inline-block;
    width: 1em;
    height: 1em;
    border: 0.1875em solid currentColor;
    border-radius: 1em;
    border-right-color: transparent;
    content: "";
    vertical-align: text-bottom;
    vertical-align: -0.125em;
    animation: spinner 0.75s linear infinite;
    opacity: var(--loading-spinner-opacity);
}
[aria-busy="true"]:not(input, select, textarea, html):not(:empty)::before {
    margin-right: calc(var(--spacing) * 0.5);
    margin-left: 0;
    margin-inline-start: 0;
    margin-inline-end: calc(var(--spacing) * 0.5);
}
[aria-busy="true"]:not(input, select, textarea, html):empty {
    text-align: center;
}

button[aria-busy="true"],
input[type="submit"][aria-busy="true"],
input[type="button"][aria-busy="true"],
input[type="reset"][aria-busy="true"],
a[aria-busy="true"] {
    pointer-events: none;
}

@keyframes spinner {
    to {
        transform: rotate(360deg);
    }
}

footer {
    padding: $baseNumber * 2 + px;
}

[onclick],
.clickable {
    cursor: pointer;
    &:hover {
        text-decoration: underline;
    }
}
